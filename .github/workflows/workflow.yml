name: Push Mirror

on:
  push:
    branches:
      - 'main'
      - 'dev'
  pull_request:
    branches:
      - 'dev'

env:
  MIRROR_URL: "git@github.com:EpitechPromo2027/B-CPP-500-LYN-5-2-rtype-noe.pereira.git"

jobs:
  clang_format_fix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Clang-Format
        run: sudo apt-get update && sudo apt-get install -y clang-format

      - name: Apply Clang-Format Fixes
        run: |
          find . -name '*.cpp' -o -name '*.h' | xargs clang-format -i -style=file

      - name: Commit and Push Fixes
        run: |
          git config user.name "GitHub Action Bot"
          git config user.email "actions@github.com"
          git add .
          git commit -m "[ADD] auto-format code with clang-format"
          git push origin ${{ github.head_ref }}

  build_and_verify:
    runs-on: ubuntu-latest
    needs: clang_format_fix
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Clean vcpkg cache
        run: rm -rf ./build/vcpkg && mkdir -p ./build/vcpkg

      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libpng-dev libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev libfreetype6-dev zlib1g-dev
          sudo apt-get install -y cmake g++ make libconfig++-dev \
          libx11-dev libxrandr-dev libxcursor-dev libxi-dev libudev-dev \
          libopenal-dev

      - name: Build Project
        run: |
          cmake -S . -B build
          cmake --build build

      - name: Run Unit Tests
        run: ./r-type_tests

  generate_docs:
    runs-on: ubuntu-latest
    needs: build_and_verify
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Doxygen
        run: sudo apt-get update && sudo apt-get install -y doxygen graphviz

      - name: Generate Documentation
        run: doxygen ./Doxyfile

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/html

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: generate_docs
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Push to Mirror Repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
